{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","scrollNext","props","frameSize","itemWidth","step","images","infinite","way","length","setState","scrollPrev","this","animationDuration","className","style","transform","transitionDuration","map","image","src","alt","width","type","onClick","React","Component","App","changeProp","event","targetName","target","name","value","method","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffe12418.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  step: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  scrollNext = () => {\n    const {\n      frameSize,\n      itemWidth,\n      step,\n      images,\n      infinite,\n    } = this.props;\n    const { position } = this.state;\n    let way = 0;\n\n    way = position + itemWidth * step;\n\n    if (position + step * itemWidth >= images.length * itemWidth - itemWidth\n      || infinite) {\n      way = images.length * itemWidth - frameSize * itemWidth;\n    }\n\n    if (position + frameSize * itemWidth >= images.length * itemWidth\n       - itemWidth) {\n      way = position + itemWidth;\n    }\n\n    if (position + frameSize * itemWidth >= images.length * itemWidth) {\n      way = position;\n    }\n\n    this.setState({\n      position: way,\n    });\n  };\n\n  scrollPrev = () => {\n    const {\n      itemWidth,\n      step,\n      infinite,\n    } = this.props;\n    const { position } = this.state;\n    let way = position - itemWidth * step;\n\n    if (position - itemWidth * step < 0 || infinite === true) {\n      way = 0;\n    }\n\n    this.setState({\n      position: way,\n    });\n  };\n\n  render() {\n    const { position } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-position}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={image}\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__nav\" style={{ width: itemWidth * frameSize }}>\n          <button\n            className=\"Carousel__prev\"\n            type=\"button\"\n            onClick={this.scrollPrev}\n          >\n            &apos;\n          </button>\n          <button\n            className=\"Carousel__next\"\n            type=\"button\"\n            onClick={this.scrollNext}\n          >\n            &apos;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  step: number;\n  infinite: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    step: 3,\n    infinite: false,\n  };\n\n  changeProp = (event: { target: { value: string; name: string; } }): void => {\n    const targetName = event.target.name;\n    const { value } = event.target;\n\n    if (targetName === 'itemWidth') {\n      this.setState({\n        itemWidth: +value,\n      });\n    }\n\n    if (targetName === 'animationDuration') {\n      this.setState({\n        animationDuration: +value,\n      });\n    }\n\n    if (targetName === 'frameSize') {\n      this.setState({\n        frameSize: +value,\n      });\n    }\n\n    if (targetName === 'step') {\n      this.setState({\n        itemWidth: +value,\n      });\n    }\n\n    if (targetName === 'infinite') {\n      if (this.state.infinite === false) {\n        this.setState({\n          infinite: true,\n        });\n      } else {\n        this.setState({\n          infinite: false,\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n\n        <div\n          className=\"App__carusel-wrapper\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <Carousel\n            images={images}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            step={step}\n            infinite={infinite}\n          />\n        </div>\n        <form method=\"get\" className=\"App__form\">\n          <span className=\"App__form-span\">Item Width:</span>\n          <input\n            className=\"App__form-input\"\n            name=\"itemWidth\"\n            type=\"number\"\n            min={100}\n            max={200}\n            defaultValue={itemWidth}\n            onChange={this.changeProp}\n          />\n\n          <span className=\"App__form-span\">Frame Size:</span>\n          <input\n            className=\"App__form-input\"\n            name=\"frameSize\"\n            type=\"number\"\n            min={3}\n            max={5}\n            defaultValue={frameSize}\n            onChange={this.changeProp}\n          />\n\n          <span className=\"App__form-span\">Step:</span>\n          <input\n            className=\"App__form-input\"\n            name=\"syep\"\n            type=\"number\"\n            min={2}\n            max={5}\n            defaultValue={step}\n            onChange={this.changeProp}\n          />\n\n          <span className=\"App__form-span\">Animation Duration ms:</span>\n          <input\n            className=\"App__form-input\"\n            name=\"animationDuration\"\n            type=\"number\"\n            min={1000}\n            max={5000}\n            defaultValue={animationDuration}\n            onChange={this.changeProp}\n          />\n\n          <span className=\"App__form-span\">Infinity Animation</span>\n          <input\n            className=\"App__form-checkbox\"\n            name=\"infinite\"\n            type=\"checkbox\"\n            onChange={this.changeProp}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}